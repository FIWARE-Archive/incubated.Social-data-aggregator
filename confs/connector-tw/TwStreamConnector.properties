###########################
## TWITTER CONFIGURATIONS##
###########################
#mandatory otherwise the connector won't work
twConsumerKey 
twConsumerSecret 
twToken 
twTokenSecret 

###########################
## NODE  CONFIGURATIONS  ##
###########################

#Name of the node that hosts the application
nodeName 

#uncomment if a proxy is used for outbound connections
#proxyPort 
#proxyHost 

###########################
## SPARK CONFIGURATIONS  ##
###########################
#max number of cores that can be used for this application
numMaxCore 2
checkpointDir 
#duration of a spark batch (consider that objects will be sent on the bus for each batch)
sparkBatchDurationMillis 3000
sparkCleanTTL 480000
#time window on which data will be saved
twitterInserterWindowDuration 60000
twitterInserterWindowSlidingInterval 60000

###########################
## APP   CONFIGURATIONS  ##
###########################
#Jetty server port
serverPort 8089

#the number of partitions to coalesce before save
savePartitions 2

#the folder where data has to be saved
dataOutputFolder 
dataRootFolder raw
#Example dataOutputFolder=file://tmp/data and dataRootFolder=raw will save data on file://tmp/data/raw/...

#class for the custom dao if you don't want to use the default one
#daoClass 

###########################
## KAFKA CONFIGURATIONS  ##
###########################
brokersList 
kafkaSerializationClass kafka.serializer.StringEncoder
#tells Kafka that you want your Producer to require an acknowledgement 
#from the Broker that the message was received. 
kafkaRequiredAcks 1
#number of connections for the connection pool
maxTotalConnections 10
maxIdleConnections 10

#uncomment if needed other implementation for connection to bus different than kafka
#customProducerFactoryImpl ${customProducerFactoryImpl} 